{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { concatMap } from 'rxjs/operators/concatMap';\nimport { tap } from 'rxjs/operators/tap';\nimport { of } from 'rxjs/observable/of';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"disabled\": a0,\n    \"btn-outline-secondary\": a1,\n    \"btn-secondary\": a2\n  };\n};\nexport class FollowButtonComponent {\n  constructor(profilesService, router, userService) {\n    this.profilesService = profilesService;\n    this.router = router;\n    this.userService = userService;\n    this.toggle = new EventEmitter();\n    this.isSubmitting = false;\n  }\n  toggleFollowing() {\n    this.isSubmitting = true;\n    // TODO: remove nested subscribes, use mergeMap\n    this.userService.isAuthenticated.pipe(concatMap(authenticated => {\n      // Not authenticated? Push to login screen\n      if (!authenticated) {\n        this.router.navigateByUrl('/login');\n        return of(null);\n      }\n      // Follow this profile if we aren't already\n      if (!this.profile.following) {\n        return this.profilesService.follow(this.profile.username).pipe(tap(data => {\n          this.isSubmitting = false;\n          this.toggle.emit(true);\n        }, err => this.isSubmitting = false));\n        // Otherwise, unfollow this profile\n      } else {\n        return this.profilesService.unfollow(this.profile.username).pipe(tap(data => {\n          this.isSubmitting = false;\n          this.toggle.emit(false);\n        }, err => this.isSubmitting = false));\n      }\n    })).subscribe();\n  }\n}\nFollowButtonComponent.ɵfac = function FollowButtonComponent_Factory(t) {\n  return new (t || FollowButtonComponent)(i0.ɵɵdirectiveInject(i1.ProfilesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.UserService));\n};\nFollowButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FollowButtonComponent,\n  selectors: [[\"app-follow-button\"]],\n  inputs: {\n    profile: \"profile\"\n  },\n  outputs: {\n    toggle: \"toggle\"\n  },\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"btn\", \"btn-sm\", \"action-btn\", 3, \"ngClass\", \"click\"], [1, \"ion-plus-round\"]],\n  template: function FollowButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function FollowButtonComponent_Template_button_click_0_listener() {\n        return ctx.toggleFollowing();\n      });\n      i0.ɵɵelement(1, \"i\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx.isSubmitting, !ctx.profile.following, ctx.profile.following));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" \\u00A0 \", ctx.profile.following ? \"Unfollow\" : \"Follow\", \" \", ctx.profile.username, \"\\n\");\n    }\n  },\n  dependencies: [i3.NgClass],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AAKtE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,EAAE,QAAQ,oBAAoB;;;;;;;;;;;;AAMvC,OAAM,MAAOC,qBAAqB;EAChCC,YACUC,eAAgC,EAChCC,MAAc,EACdC,WAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAIX,WAAM,GAAG,IAAIR,YAAY,EAAW;IAC9C,iBAAY,GAAG,KAAK;EAJjB;EAMHS,eAAe;IACb,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB;IAEA,IAAI,CAACF,WAAW,CAACG,eAAe,CAACC,IAAI,CAACX,SAAS,CAC5CY,aAAa,IAAI;MAChB;MACA,IAAI,CAACA,aAAa,EAAE;QAClB,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,QAAQ,CAAC;QACnC,OAAOX,EAAE,CAAC,IAAI,CAAC;;MAGjB;MACA,IAAI,CAAC,IAAI,CAACY,OAAO,CAACC,SAAS,EAAE;QAC3B,OAAO,IAAI,CAACV,eAAe,CAACW,MAAM,CAAC,IAAI,CAACF,OAAO,CAACG,QAAQ,CAAC,CACxDN,IAAI,CAACV,GAAG,CACPiB,IAAI,IAAG;UACL,IAAI,CAACT,YAAY,GAAG,KAAK;UACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,EACDC,GAAG,IAAI,IAAI,CAACZ,YAAY,GAAG,KAAK,CACjC,CAAC;QAEJ;OACC,MAAM;QACL,OAAO,IAAI,CAACJ,eAAe,CAACiB,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACG,QAAQ,CAAC,CAC1DN,IAAI,CAACV,GAAG,CACPiB,IAAI,IAAG;UACL,IAAI,CAACT,YAAY,GAAG,KAAK;UACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,KAAK,CAAC;QACzB,CAAC,EACDC,GAAG,IAAI,IAAI,CAACZ,YAAY,GAAG,KAAK,CACjC,CAAC;;IAEN,CAAC,CACF,CAAC,CAACc,SAAS,EAAE;EAChB;;AA/CWpB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAqB;EAAAC;IAAAX;EAAA;EAAAY;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCblCC,iCAK8B;MAA5BA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAC3BD,uBAA8B;MAC9BA,YAEF;MAAAA,iBAAS;;;MAPPA,qHAEkD;MAGlDA,eAEF;MAFEA,iHAEF","names":["EventEmitter","concatMap","tap","of","FollowButtonComponent","constructor","profilesService","router","userService","toggleFollowing","isSubmitting","isAuthenticated","pipe","authenticated","navigateByUrl","profile","following","follow","username","data","toggle","emit","err","unfollow","subscribe","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\buttons\\follow-button.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\buttons\\follow-button.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Profile } from '../models';\nimport { ProfilesService, UserService } from '../services';\nimport { concatMap } from 'rxjs/operators/concatMap';\nimport { tap } from 'rxjs/operators/tap';\nimport { of } from 'rxjs/observable/of';\n\n@Component({\n  selector: 'app-follow-button',\n  templateUrl: './follow-button.component.html'\n})\nexport class FollowButtonComponent {\n  constructor(\n    private profilesService: ProfilesService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  @Input() profile: Profile;\n  @Output() toggle = new EventEmitter<boolean>();\n  isSubmitting = false;\n\n  toggleFollowing() {\n    this.isSubmitting = true;\n    // TODO: remove nested subscribes, use mergeMap\n\n    this.userService.isAuthenticated.pipe(concatMap(\n      (authenticated) => {\n        // Not authenticated? Push to login screen\n        if (!authenticated) {\n          this.router.navigateByUrl('/login');\n          return of(null);\n        }\n\n        // Follow this profile if we aren't already\n        if (!this.profile.following) {\n          return this.profilesService.follow(this.profile.username)\n          .pipe(tap(\n            data => {\n              this.isSubmitting = false;\n              this.toggle.emit(true);\n            },\n            err => this.isSubmitting = false\n          ));\n\n        // Otherwise, unfollow this profile\n        } else {\n          return this.profilesService.unfollow(this.profile.username)\n          .pipe(tap(\n            data => {\n              this.isSubmitting = false;\n              this.toggle.emit(false);\n            },\n            err => this.isSubmitting = false\n          ));\n        }\n      }\n    )).subscribe();\n  }\n}\n","<button\n  class=\"btn btn-sm action-btn\"\n  [ngClass]=\"{ 'disabled': isSubmitting,\n               'btn-outline-secondary': !profile.following,\n               'btn-secondary': profile.following }\"\n  (click)=\"toggleFollowing()\">\n  <i class=\"ion-plus-round\"></i>\n  &nbsp;\n  {{ profile.following ? 'Unfollow' : 'Follow' }} {{ profile.username }}\n</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}