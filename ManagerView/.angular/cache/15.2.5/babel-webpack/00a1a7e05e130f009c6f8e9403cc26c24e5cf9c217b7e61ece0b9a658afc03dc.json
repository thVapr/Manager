{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/user.service\";\nexport class ShowAuthedDirective {\n  constructor(templateRef, userService, viewContainer) {\n    this.templateRef = templateRef;\n    this.userService = userService;\n    this.viewContainer = viewContainer;\n  }\n  ngOnInit() {\n    this.userService.isAuthenticated.subscribe(isAuthenticated => {\n      if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainer.clear();\n      }\n    });\n  }\n  set appShowAuthed(condition) {\n    this.condition = condition;\n  }\n}\nShowAuthedDirective.ɵfac = function ShowAuthedDirective_Factory(t) {\n  return new (t || ShowAuthedDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nShowAuthedDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: ShowAuthedDirective,\n  selectors: [[\"\", \"appShowAuthed\", \"\"]],\n  inputs: {\n    appShowAuthed: \"appShowAuthed\"\n  }\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,mBAAmB;EAC9BC,YACUC,WAA6B,EAC7BC,WAAwB,EACxBC,aAA+B;IAF/B,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,kBAAa,GAAbC,aAAa;EACpB;EAIHC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,eAAe,CAACC,SAAS,CACvCD,eAAe,IAAI;MAClB,IAAIA,eAAe,IAAI,IAAI,CAACE,SAAS,IAAI,CAACF,eAAe,IAAI,CAAC,IAAI,CAACE,SAAS,EAAE;QAC5E,IAAI,CAACJ,aAAa,CAACK,kBAAkB,CAAC,IAAI,CAACP,WAAW,CAAC;OACxD,MAAM;QACL,IAAI,CAACE,aAAa,CAACM,KAAK,EAAE;;IAE9B,CAAC,CACF;EACH;EAEA,IAAaC,aAAa,CAACH,SAAkB;IAC3C,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;;AAvBWR,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAY;EAAAC;IAAAF;EAAA;AAAA","names":["ShowAuthedDirective","constructor","templateRef","userService","viewContainer","ngOnInit","isAuthenticated","subscribe","condition","createEmbeddedView","clear","appShowAuthed","selectors","inputs"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\show-authed.directive.ts"],"sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { UserService } from './services/user.service';\n\n@Directive({ selector: '[appShowAuthed]' })\nexport class ShowAuthedDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private userService: UserService,\n    private viewContainer: ViewContainerRef\n  ) {}\n\n  condition: boolean;\n\n  ngOnInit() {\n    this.userService.isAuthenticated.subscribe(\n      (isAuthenticated) => {\n        if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        } else {\n          this.viewContainer.clear();\n        }\n      }\n    );\n  }\n\n  @Input() set appShowAuthed(condition: boolean) {\n    this.condition = condition;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}