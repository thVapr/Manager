{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../shared/list-errors.component\";\nexport class SettingsComponent {\n  constructor(router, userService, fb) {\n    this.router = router;\n    this.userService = userService;\n    this.fb = fb;\n    this.user = {};\n    this.errors = {};\n    this.isSubmitting = false;\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    });\n    // Optional: subscribe to changes on the form\n    // this.settingsForm.valueChanges.subscribe(values => this.updateUser(values));\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    Object.assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    this.settingsForm.patchValue(this.user);\n  }\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n  submitForm() {\n    this.isSubmitting = true;\n    // update the model\n    this.updateUser(this.settingsForm.value);\n    this.userService.update(this.user).subscribe(updatedUser => this.router.navigateByUrl('/profile/' + updatedUser.username), err => {\n      this.errors = err;\n      this.isSubmitting = false;\n    });\n  }\n  updateUser(values) {\n    Object.assign(this.user, values);\n  }\n}\nSettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n  return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SettingsComponent,\n  selectors: [[\"app-settings-page\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[1, \"settings-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-xs-12\"], [1, \"text-xs-center\"], [3, \"errors\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"URL of profile picture\", \"formControlName\", \"image\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"form-control\", \"form-control-lg\"], [\"rows\", \"8\", \"placeholder\", \"Short bio about you\", \"formControlName\", \"bio\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"password\", \"placeholder\", \"New Password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function SettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \"Your Settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"app-list-errors\", 5);\n      i0.ɵɵelementStart(7, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"fieldset\", 7)(9, \"fieldset\", 8);\n      i0.ɵɵelement(10, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"fieldset\", 8);\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"fieldset\", 8)(14, \"textarea\", 11);\n      i0.ɵɵtext(15, \"              \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"fieldset\", 8);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"fieldset\", 8);\n      i0.ɵɵelement(19, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 14);\n      i0.ɵɵtext(21, \" Update Settings \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(22, \"hr\");\n      i0.ɵɵelementStart(23, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_23_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(24, \" Or click here to logout. \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"errors\", ctx.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.ListErrorsComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;AAUA,OAAM,MAAOA,iBAAiB;EAM5BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,EAAe;IAFf,WAAM,GAANF,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,OAAE,GAAFC,EAAE;IARZ,SAAI,GAAS,EAAU;IAEvB,WAAM,GAAW,EAAE;IACnB,iBAAY,GAAG,KAAK;IAOlB;IACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAChCC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX,CAAC;IACF;IACA;EACF;;EAEAC,QAAQ;IACN;IACAC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACZ,WAAW,CAACa,cAAc,EAAE,CAAC;IAC3D;IACA,IAAI,CAACX,YAAY,CAACY,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC;EACzC;EAEAG,MAAM;IACJ,IAAI,CAACf,WAAW,CAACgB,SAAS,EAAE;IAC5B,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,GAAG,CAAC;EAChC;EAEAC,UAAU;IACR,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB;IACA,IAAI,CAACC,UAAU,CAAC,IAAI,CAAClB,YAAY,CAACmB,KAAK,CAAC;IAExC,IAAI,CAACrB,WAAW,CACfsB,MAAM,CAAC,IAAI,CAACV,IAAI,CAAC,CACjBW,SAAS,CACRC,WAAW,IAAI,IAAI,CAACzB,MAAM,CAACkB,aAAa,CAAC,WAAW,GAAGO,WAAW,CAACnB,QAAQ,CAAC,EAC5EoB,GAAG,IAAG;MACJ,IAAI,CAACC,MAAM,GAAGD,GAAG;MACjB,IAAI,CAACN,YAAY,GAAG,KAAK;IAC3B,CAAC,CACF;EACH;EAEAC,UAAU,CAACO,MAAc;IACvBjB,MAAM,CAACC,MAAM,CAAC,IAAI,CAACC,IAAI,EAAEe,MAAM,CAAC;EAClC;;AAtDW9B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BC,8BAA2B;MAKQA,6BAAa;MAAAA,iBAAK;MAE7CA,qCAAqD;MAErDA,+BAA2D;MAA1BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MACxDD,mCAAoC;MAGhCA,4BAG4B;MAC9BA,iBAAW;MAEXA,oCAA6B;MAC3BA,6BAG+B;MACjCA,iBAAW;MAEXA,oCAA6B;MAK3BA;MAAAA,iBAAW;MAGbA,oCAA6B;MAC3BA,6BAG4B;MAC9BA,iBAAW;MAEXA,oCAA6B;MAC3BA,6BAG+B;MACjCA,iBAAW;MAEXA,mCACgB;MACdA,kCACF;MAAAA,iBAAS;MAMbA,sBAAM;MAENA,mCACqB;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAClBD,2CACF;MAAAA,iBAAS;;;MAvDQA,eAAiB;MAAjBA,mCAAiB;MAE5BA,eAA0B;MAA1BA,4CAA0B;MACpBA,eAAyB;MAAzBA,2CAAyB","names":["SettingsComponent","constructor","router","userService","fb","settingsForm","group","image","username","bio","email","password","ngOnInit","Object","assign","user","getCurrentUser","patchValue","logout","purgeAuth","navigateByUrl","submitForm","isSubmitting","updateUser","value","update","subscribe","updatedUser","err","errors","values","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\settings\\settings.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\settings\\settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User, UserService } from '../shared';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  user: User = {} as User;\n  settingsForm: FormGroup;\n  errors: Object = {};\n  isSubmitting = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder\n  ) {\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    });\n    // Optional: subscribe to changes on the form\n    // this.settingsForm.valueChanges.subscribe(values => this.updateUser(values));\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    Object.assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    this.settingsForm.patchValue(this.user);\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    // update the model\n    this.updateUser(this.settingsForm.value);\n\n    this.userService\n    .update(this.user)\n    .subscribe(\n      updatedUser => this.router.navigateByUrl('/profile/' + updatedUser.username),\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  updateUser(values: Object) {\n    Object.assign(this.user, values);\n  }\n\n}\n","<div class=\"settings-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n\n        <h1 class=\"text-xs-center\">Your Settings</h1>\n\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\n\n        <form [formGroup]=\"settingsForm\" (ngSubmit)=\"submitForm()\">\n          <fieldset [disabled]=\"isSubmitting\">\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control\"\n                type=\"text\"\n                placeholder=\"URL of profile picture\"\n                formControlName=\"image\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"text\"\n                placeholder=\"Username\"\n                formControlName=\"username\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <textarea class=\"form-control form-control-lg\"\n                rows=\"8\"\n                placeholder=\"Short bio about you\"\n                formControlName=\"bio\">\n              </textarea>\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"email\"\n                placeholder=\"Email\"\n                formControlName=\"email\" />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input class=\"form-control form-control-lg\"\n                type=\"password\"\n                placeholder=\"New Password\"\n                formControlName=\"password\" />\n            </fieldset>\n\n            <button class=\"btn btn-lg btn-primary pull-xs-right\"\n              type=\"submit\">\n              Update Settings\n            </button>\n\n          </fieldset>\n        </form>\n\n        <!-- Line break for logout button -->\n        <hr />\n\n        <button class=\"btn btn-outline-danger\"\n          (click)=\"logout()\">\n          Or click here to logout.\n        </button>\n\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}