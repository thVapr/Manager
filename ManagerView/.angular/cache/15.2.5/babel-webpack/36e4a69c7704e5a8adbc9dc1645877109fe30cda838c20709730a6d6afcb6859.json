{"ast":null,"code":"import { catchError } from 'rxjs/operators/catchError';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/router\";\nexport class ArticleResolver {\n  constructor(articlesService, router, userService) {\n    this.articlesService = articlesService;\n    this.router = router;\n    this.userService = userService;\n  }\n  resolve(route, state) {\n    return this.articlesService.get(route.params['slug']).pipe(catchError(err => this.router.navigateByUrl('/')));\n  }\n}\nArticleResolver.ɵfac = function ArticleResolver_Factory(t) {\n  return new (t || ArticleResolver)(i0.ɵɵinject(i1.ArticlesService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1.UserService));\n};\nArticleResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArticleResolver,\n  factory: ArticleResolver.ɵfac\n});","map":{"version":3,"mappings":"AAKA,SAASA,UAAU,QAAQ,2BAA2B;;;;AAGtD,OAAM,MAAOC,eAAe;EAC1BC,YACUC,eAAgC,EAChCC,MAAc,EACdC,WAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;EAClB;EAEHC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAG1B,OAAO,IAAI,CAACL,eAAe,CAACM,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC,MAAM,CAAC,CAAC,CAClDC,IAAI,CAACX,UAAU,CAAEY,GAAG,IAAK,IAAI,CAACR,MAAM,CAACS,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9D;;AAdWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;AAAA","names":["catchError","ArticleResolver","constructor","articlesService","router","userService","resolve","route","state","get","params","pipe","err","navigateByUrl","factory"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\article\\article-resolver.service.ts"],"sourcesContent":["import { Injectable, } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Article, ArticlesService, UserService } from '../shared';\nimport { catchError } from 'rxjs/operators/catchError';\n\n@Injectable()\nexport class ArticleResolver implements Resolve<Article> {\n  constructor(\n    private articlesService: ArticlesService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n\n    return this.articlesService.get(route.params['slug'])\n      .pipe(catchError((err) => this.router.navigateByUrl('/')));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}