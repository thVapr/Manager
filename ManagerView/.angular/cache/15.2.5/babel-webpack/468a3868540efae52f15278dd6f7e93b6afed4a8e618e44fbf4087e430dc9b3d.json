{"ast":null,"code":"import { catchError } from 'rxjs/operators/catchError';\nimport { map } from 'rxjs/operators/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/router\";\nexport class EditableArticleResolver {\n  constructor(articlesService, router, userService) {\n    this.articlesService = articlesService;\n    this.router = router;\n    this.userService = userService;\n  }\n  resolve(route, state) {\n    return this.articlesService.get(route.params['slug']).pipe(map(article => {\n      if (this.userService.getCurrentUser().username === article.author.username) {\n        return article;\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    }), catchError(err => this.router.navigateByUrl('/')));\n  }\n}\nEditableArticleResolver.ɵfac = function EditableArticleResolver_Factory(t) {\n  return new (t || EditableArticleResolver)(i0.ɵɵinject(i1.ArticlesService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1.UserService));\n};\nEditableArticleResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EditableArticleResolver,\n  factory: EditableArticleResolver.ɵfac\n});","map":{"version":3,"mappings":"AAKA,SAASA,UAAU,QAAQ,2BAA2B;AACtD,SAASC,GAAG,QAAQ,oBAAoB;;;;AAGxC,OAAM,MAAOC,uBAAuB;EAClCC,YACUC,eAAgC,EAChCC,MAAc,EACdC,WAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;EACjB;EAEJC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAG1B,OAAO,IAAI,CAACL,eAAe,CAACM,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC,MAAM,CAAC,CAAC,CAClDC,IAAI,CACHX,GAAG,CACDY,OAAO,IAAG;MACR,IAAI,IAAI,CAACP,WAAW,CAACQ,cAAc,EAAE,CAACC,QAAQ,KAAKF,OAAO,CAACG,MAAM,CAACD,QAAQ,EAAE;QAC1E,OAAOF,OAAO;OACf,MAAM;QACL,IAAI,CAACR,MAAM,CAACY,aAAa,CAAC,GAAG,CAAC;;IAElC,CAAC,CACF,EACDjB,UAAU,CAAEkB,GAAG,IAAK,IAAI,CAACb,MAAM,CAACY,aAAa,CAAC,GAAG,CAAC,CAAC,CACpD;EACL;;AAzBWf,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAiB,SAAvBjB,uBAAuB;AAAA","names":["catchError","map","EditableArticleResolver","constructor","articlesService","router","userService","resolve","route","state","get","params","pipe","article","getCurrentUser","username","author","navigateByUrl","err","factory"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\editor\\editable-article-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Article, ArticlesService, UserService } from '../shared';\nimport { catchError } from 'rxjs/operators/catchError';\nimport { map } from 'rxjs/operators/map';\n\n@Injectable()\nexport class EditableArticleResolver implements Resolve<Article> {\n  constructor(\n    private articlesService: ArticlesService,\n    private router: Router,\n    private userService: UserService\n  ) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n\n    return this.articlesService.get(route.params['slug'])\n      .pipe(\n        map(\n          article => {\n            if (this.userService.getCurrentUser().username === article.author.username) {\n              return article;\n            } else {\n              this.router.navigateByUrl('/');\n            }\n          }\n        ),\n        catchError((err) => this.router.navigateByUrl('/'))\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}