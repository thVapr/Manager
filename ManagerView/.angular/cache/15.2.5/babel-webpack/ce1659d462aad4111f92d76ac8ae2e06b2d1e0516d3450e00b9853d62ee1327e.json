{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError } from 'rxjs/operators/catchError';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./jwt.service\";\nexport class ApiService {\n  constructor(http, jwtService) {\n    this.http = http;\n    this.jwtService = jwtService;\n  }\n  formatErrors(error) {\n    return new ErrorObservable(error.error);\n  }\n  get(path, params = new HttpParams()) {\n    return this.http.get(`${environment.api_url}${path}`, {\n      params\n    }).pipe(catchError(this.formatErrors));\n  }\n  put(path, body = {}) {\n    return this.http.put(`${environment.api_url}${path}`, JSON.stringify(body)).pipe(catchError(this.formatErrors));\n  }\n  post(path, body = {}) {\n    return this.http.post(`${environment.api_url}${path}`, JSON.stringify(body)).pipe(catchError(this.formatErrors));\n  }\n  delete(path) {\n    return this.http.delete(`${environment.api_url}${path}`).pipe(catchError(this.formatErrors));\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtService));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,mCAAmC;AAC/D,SAAkCC,UAAU,QAAQ,sBAAsB;AAI1E,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,UAAU,QAAQ,2BAA2B;;;;AAGtD,OAAM,MAAOC,UAAU;EACrBC,YACUC,IAAgB,EAChBC,UAAsB;IADtB,SAAI,GAAJD,IAAI;IACJ,eAAU,GAAVC,UAAU;EACjB;EAEKC,YAAY,CAACC,KAAU;IAC7B,OAAO,IAAIP,eAAe,CAACO,KAAK,CAACA,KAAK,CAAC;EACzC;EAEAC,GAAG,CAACC,IAAY,EAAEC,SAAqB,IAAIX,UAAU,EAAE;IACrD,OAAO,IAAI,CAACK,IAAI,CAACI,GAAG,CAAC,GAAGV,WAAW,CAACa,OAAO,GAAGF,IAAI,EAAE,EAAE;MAAEC;IAAM,CAAE,CAAC,CAC9DE,IAAI,CAACX,UAAU,CAAC,IAAI,CAACK,YAAY,CAAC,CAAC;EACxC;EAEAO,GAAG,CAACJ,IAAY,EAAEK,OAAe,EAAE;IACjC,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAClB,GAAGf,WAAW,CAACa,OAAO,GAAGF,IAAI,EAAE,EAC/BM,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CACrB,CAACF,IAAI,CAACX,UAAU,CAAC,IAAI,CAACK,YAAY,CAAC,CAAC;EACvC;EAEAW,IAAI,CAACR,IAAY,EAAEK,OAAe,EAAE;IAClC,OAAO,IAAI,CAACV,IAAI,CAACa,IAAI,CACnB,GAAGnB,WAAW,CAACa,OAAO,GAAGF,IAAI,EAAE,EAC/BM,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CACrB,CAACF,IAAI,CAACX,UAAU,CAAC,IAAI,CAACK,YAAY,CAAC,CAAC;EACvC;EAEAY,MAAM,CAACT,IAAI;IACT,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CACrB,GAAGpB,WAAW,CAACa,OAAO,GAAGF,IAAI,EAAE,CAChC,CAACG,IAAI,CAACX,UAAU,CAAC,IAAI,CAACK,YAAY,CAAC,CAAC;EACvC;;AAjCWJ,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAiB,SAAVjB,UAAU;AAAA","names":["environment","HttpParams","ErrorObservable","catchError","ApiService","constructor","http","jwtService","formatErrors","error","get","path","params","api_url","pipe","put","body","JSON","stringify","post","delete","factory"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { JwtService } from './jwt.service';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError } from 'rxjs/operators/catchError';\n\n@Injectable()\nexport class ApiService {\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService\n  ) {}\n\n  private formatErrors(error: any) {\n    return new ErrorObservable(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${path}`, { params })\n      .pipe(catchError(this.formatErrors));\n  }\n\n  put(path: string, body: Object = {}): Observable<any> {\n    return this.http.put(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  post(path: string, body: Object = {}): Observable<any> {\n    return this.http.post(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  delete(path): Observable<any> {\n    return this.http.delete(\n      `${environment.api_url}${path}`\n    ).pipe(catchError(this.formatErrors));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}