{"ast":null,"code":"import { map } from 'rxjs/operators/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class ProfilesService {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  get(username) {\n    return this.apiService.get('/profiles/' + username).pipe(map(data => data.profile));\n  }\n  follow(username) {\n    return this.apiService.post('/profiles/' + username + '/follow');\n  }\n  unfollow(username) {\n    return this.apiService.delete('/profiles/' + username + '/follow');\n  }\n}\nProfilesService.ɵfac = function ProfilesService_Factory(t) {\n  return new (t || ProfilesService)(i0.ɵɵinject(i1.ApiService));\n};\nProfilesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfilesService,\n  factory: ProfilesService.ɵfac\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAG,QAAQ,oBAAoB;;;AAGxC,OAAM,MAAOC,eAAe;EAC1BC,YACUC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EACjB;EAEHC,GAAG,CAACC,QAAgB;IAClB,OAAO,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,YAAY,GAAGC,QAAQ,CAAC,CAChDC,IAAI,CAACN,GAAG,CAAEO,IAAwB,IAAKA,IAAI,CAACC,OAAO,CAAC,CAAC;EAC1D;EAEAC,MAAM,CAACJ,QAAgB;IACrB,OAAO,IAAI,CAACF,UAAU,CAACO,IAAI,CAAC,YAAY,GAAGL,QAAQ,GAAG,SAAS,CAAC;EAClE;EAEAM,QAAQ,CAACN,QAAgB;IACvB,OAAO,IAAI,CAACF,UAAU,CAACS,MAAM,CAAC,YAAY,GAAGP,QAAQ,GAAG,SAAS,CAAC;EACpE;;AAhBWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;AAAA","names":["map","ProfilesService","constructor","apiService","get","username","pipe","data","profile","follow","post","unfollow","delete","factory"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\services\\profiles.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ApiService } from './api.service';\nimport { Profile } from '../models';\nimport { map } from 'rxjs/operators/map';\n\n@Injectable()\nexport class ProfilesService {\n  constructor (\n    private apiService: ApiService\n  ) {}\n\n  get(username: string): Observable<Profile> {\n    return this.apiService.get('/profiles/' + username)\n      .pipe(map((data: {profile: Profile}) => data.profile));\n  }\n\n  follow(username: string): Observable<Profile> {\n    return this.apiService.post('/profiles/' + username + '/follow');\n  }\n\n  unfollow(username: string): Observable<Profile> {\n    return this.apiService.delete('/profiles/' + username + '/follow');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}