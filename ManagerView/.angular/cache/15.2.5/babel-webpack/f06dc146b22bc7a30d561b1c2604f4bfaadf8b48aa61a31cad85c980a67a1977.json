{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class RegisterComponent {\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Заполните поле';\n    }\n    return this.email.hasError('email') ? \"Не верный формат\" : '';\n  }\n  constructor(authSevice) {\n    this.authSevice = authSevice;\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.password = new FormControl('', [Validators.required]);\n  }\n  register(email, password) {\n    this.authSevice.register(email, password);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 14,\n  vars: 0,\n  consts: [[1, \"mb-3\", 3, \"submit\"], [1, \"mb-3\"], [\"for\", \"\", 1, \"form-label\"], [\"type\", \"email\", \"name\", \"\", \"id\", \"\", \"aria-describedby\", \"emailHelpId\", \"placeholder\", \"abc@mail.com\", 1, \"form-control\"], [\"id\", \"emailHelpId\", 1, \"form-text\", \"text-muted\"], [\"type\", \"password\", \"name\", \"\", \"id\", \"\", \"placeholder\", \"\", 1, \"form-control\"], [\"name\", \"\", \"id\", \"\", \"type\", \"submit\", \"value\", \"Button\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"register works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_2_listener() {\n        return ctx.register;\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementStart(7, \"small\", 4);\n      i0.ɵɵtext(8, \"Help text\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 2);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,WAAW,EAAEC,UAAU,QAAO,gBAAgB;;;;AAOtD,OAAM,MAAOC,iBAAiB;EAK5BC,eAAe;IACb,IAAI,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnC,OAAO,gBAAgB;;IAGzB,OAAO,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,kBAAkB,GAAG,EAAE;EAC/D;EAEAC,YAAoBC,UAAuB;IAAvB,eAAU,GAAVA,UAAU;IAX9B,UAAK,GAAG,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACG,KAAK,CAAC,CAAC;IACnE,aAAQ,GAAG,IAAIJ,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACO,QAAQ,CAAC,CAAC;EAUN;EAE9CC,QAAQ,CAACL,KAAa,EAAEM,QAAgB;IAEtC,IAAI,CAACH,UAAU,CAACE,QAAQ,CAACL,KAAK,EAAEM,QAAQ,CAAC;EAC3C;;AAlBWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT9BC,yBAAG;MAAAA,+BAAe;MAAAA,iBAAI;MAEtBA,+BAAuC;MAApBA;QAAA;MAAA,EAAmB;MACpCA,8BAAkB;MACiBA,qBAAK;MAAAA,iBAAQ;MAC9CA,2BAAiH;MACjHA,gCAAqD;MAAAA,yBAAS;MAAAA,iBAAQ;MAGxEA,8BAAkB;MACiBA,yBAAQ;MAAAA,iBAAQ;MACjDA,4BAAyE;MAC3EA,iBAAM;MAENA,4BAA0E;MAC5EA,iBAAO","names":["FormControl","Validators","RegisterComponent","getErrorMessage","email","hasError","constructor","authSevice","required","register","password","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  \n  email = new FormControl('',[Validators.required, Validators.email]);\n  password = new FormControl('',[Validators.required]);\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Заполните поле';\n    }\n\n    return this.email.hasError('email') ? \"Не верный формат\" : '';\n  }\n    \n  constructor(private authSevice: AuthService) {}\n\n  register(email: string, password: string)\n  {\n    this.authSevice.register(email, password);\n  }\n}\n","<p>register works!</p>\n\n<form class=\"mb-3\" (submit)=\"register\">\n  <div class=\"mb-3\">\n    <label for=\"\" class=\"form-label\">Email</label>\n    <input type=\"email\" class=\"form-control\" name=\"\" id=\"\" aria-describedby=\"emailHelpId\" placeholder=\"abc@mail.com\">\n    <small id=\"emailHelpId\" class=\"form-text text-muted\">Help text</small>\n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"\" class=\"form-label\">Password</label>\n    <input type=\"password\" class=\"form-control\" name=\"\" id=\"\" placeholder=\"\">\n  </div>\n\n  <input name=\"\" id=\"\" class=\"btn btn-primary\" type=\"submit\" value=\"Button\">\n</form>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}