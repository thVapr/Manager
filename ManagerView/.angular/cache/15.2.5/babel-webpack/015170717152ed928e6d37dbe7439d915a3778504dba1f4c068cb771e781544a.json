{"ast":null,"code":"import { map } from 'rxjs/operators/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class CommentsService {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  add(slug, payload) {\n    return this.apiService.post(`/articles/${slug}/comments`, {\n      comment: {\n        body: payload\n      }\n    }).pipe(map(data => data.comment));\n  }\n  getAll(slug) {\n    return this.apiService.get(`/articles/${slug}/comments`).pipe(map(data => data.comments));\n  }\n  destroy(commentId, articleSlug) {\n    return this.apiService.delete(`/articles/${articleSlug}/comments/${commentId}`);\n  }\n}\nCommentsService.ɵfac = function CommentsService_Factory(t) {\n  return new (t || CommentsService)(i0.ɵɵinject(i1.ApiService));\n};\nCommentsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentsService,\n  factory: CommentsService.ɵfac\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAG,QAAQ,oBAAoB;;;AAIxC,OAAM,MAAOC,eAAe;EAC1BC,YACUC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EACjB;EAEHC,GAAG,CAACC,IAAI,EAAEC,OAAO;IACf,OAAO,IAAI,CAACH,UAAU,CACrBI,IAAI,CACH,aAAaF,IAAI,WAAW,EAC5B;MAAEG,OAAO,EAAE;QAAEC,IAAI,EAAEH;MAAO;IAAE,CAAE,CAC/B,CAACI,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACH,OAAO,CAAC,CAAC;EACnC;EAEAI,MAAM,CAACP,IAAI;IACT,OAAO,IAAI,CAACF,UAAU,CAACU,GAAG,CAAC,aAAaR,IAAI,WAAW,CAAC,CACrDK,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAAC,CAAC;EACrC;EAEAC,OAAO,CAACC,SAAS,EAAEC,WAAW;IAC5B,OAAO,IAAI,CAACd,UAAU,CACde,MAAM,CAAC,aAAaD,WAAW,aAAaD,SAAS,EAAE,CAAC;EAClE;;AArBWf,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;AAAA","names":["map","CommentsService","constructor","apiService","add","slug","payload","post","comment","body","pipe","data","getAll","get","comments","destroy","commentId","articleSlug","delete","factory"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\services\\comments.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ApiService } from './api.service';\nimport { Comment } from '../models';\nimport { map } from 'rxjs/operators/map';\n\n\n@Injectable()\nexport class CommentsService {\n  constructor (\n    private apiService: ApiService\n  ) {}\n\n  add(slug, payload): Observable<Comment> {\n    return this.apiService\n    .post(\n      `/articles/${slug}/comments`,\n      { comment: { body: payload } }\n    ).pipe(map(data => data.comment));\n  }\n\n  getAll(slug): Observable<Comment[]> {\n    return this.apiService.get(`/articles/${slug}/comments`)\n      .pipe(map(data => data.comments));\n  }\n\n  destroy(commentId, articleSlug) {\n    return this.apiService\n           .delete(`/articles/${articleSlug}/comments/${commentId}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}