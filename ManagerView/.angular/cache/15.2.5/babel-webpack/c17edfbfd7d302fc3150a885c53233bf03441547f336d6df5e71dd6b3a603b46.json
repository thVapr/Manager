{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5106/api/authentication';\n  }\n  register(email, password) {\n    return this.http.post(`${this.apiUrl}/register`, {\n      email,\n      password\n    }).pipe(tap(response => {\n      const {\n        item1,\n        item2\n      } = response;\n      localStorage.setItem('access_token', item1);\n      localStorage.setItem('refresh_token', item2);\n    }));\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    });\n  }\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n  getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,0CAA0C;EAEpB;EAEvCC,QAAQ,CAACC,KAAa,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,WAAW,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAACG,IAAI,CAC7ET,GAAG,CAACU,QAAQ,IAAG;MACb,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAE,GAAGF,QAAQ;MACjCG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,KAAK,CAAC;MAC3CE,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAEAG,KAAK,CAACV,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAC,CAAC;EACnE;EAEAU,cAAc;IACZ,OAAOH,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEAC,eAAe;IACb,OAAOL,YAAY,CAACI,OAAO,CAAC,eAAe,CAAC;EAC9C;EAEAE,MAAM;IACJN,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;IACvCP,YAAY,CAACO,UAAU,CAAC,eAAe,CAAC;EAC1C;;AA9BWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["tap","AuthService","constructor","http","register","email","password","post","apiUrl","pipe","response","item1","item2","localStorage","setItem","login","getAccessToken","getItem","getRefreshToken","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:5106/api/authentication';\n\n  constructor(private http: HttpClient) {}\n\n  register(email: string, password: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/register`, { email, password }).pipe(\n      tap(response => {\n        const { item1, item2 } = response;\n        localStorage.setItem('access_token', item1);\n        localStorage.setItem('refresh_token', item2);\n      })\n    );\n  }\n\n  login(email: string, password: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, { email, password});\n  }\n\n  getAccessToken(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  getRefreshToken(): string | null {\n    return localStorage.getItem('refresh_token');\n  }\n\n  logout(): void {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}