{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.registrationForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  register() {\n    const email = this.registrationForm.value.email;\n    const password = this.registrationForm.value.password;\n    this.authService.register(email, password).subscribe(response => {\n      console.log('Registration successful');\n    }, error => {\n      console.error('Registration failed', error);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 0,\n  vars: 0,\n  template: function RegisterComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,iBAAiB;EAM5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAL/B,qBAAgB,GAAG,IAAIJ,SAAS,CAAC;MAC/BK,KAAK,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACI,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAC;EAE6C;EAE/CC,QAAQ;IACN,MAAMJ,KAAK,GAAG,IAAI,CAACK,gBAAgB,CAACC,KAAK,CAACN,KAAK;IAC/C,MAAME,QAAQ,GAAG,IAAI,CAACG,gBAAgB,CAACC,KAAK,CAACJ,QAAQ;IACrD,IAAI,CAACH,WAAW,CAACK,QAAQ,CAACJ,KAAM,EAAEE,QAAS,CAAC,CACzCK,SAAS,CAACC,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,EAAEC,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN;;AAjBWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormControl","FormGroup","Validators","RegisterComponent","constructor","authService","email","required","password","minLength","register","registrationForm","value","subscribe","response","console","log","error","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  registrationForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  });\n\n  constructor(private authService: AuthService) {}\n\n  register() {\n    const email = this.registrationForm.value.email;\n    const password = this.registrationForm.value.password;\n    this.authService.register(email!, password!)\n      .subscribe(response => {\n        console.log('Registration successful');\n      }, error => {\n        console.error('Registration failed', error);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}