{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nexport class RegisterComponent {\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Заполните поле';\n    }\n    return this.email.hasError('email') ? \"Не верный формат\" : '';\n  }\n  constructor(authSevice) {\n    this.authSevice = authSevice;\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.password = new FormControl('', [Validators.required]);\n    this.hide = true;\n  }\n  register(email, password) {\n    this.authSevice.register(email, password);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"col-4\", \"mt-5\", \"justify-content-center\"], [1, \"row-2\"], [\"for\", \"\", 1, \"form-label\"], [\"type\", \"email\", \"placeholder\", \"abc@mail.com\", 1, \"form-control\"], [\"type\", \"password\", 1, \"form-control\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\", 0)(3, \"li\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"li\", 1)(8, \"label\", 2);\n      i0.ɵɵtext(9, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOxD,OAAM,MAAOC,iBAAiB;EAM5BC,eAAe;IACb,IAAI,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnC,OAAO,gBAAgB;;IAGzB,OAAO,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,kBAAkB,GAAG,EAAE;EAC/D;EAEAC,YAAoBC,UAAuB;IAAvB,eAAU,GAAVA,UAAU;IAZ9B,UAAK,GAAG,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACG,KAAK,CAAC,CAAC;IACnE,aAAQ,GAAG,IAAIJ,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACO,QAAQ,CAAC,CAAC;IACpD,SAAI,GAAG,IAAI;EAUmC;EAE9CC,QAAQ,CAACL,KAAa,EAAEM,QAAgB;IAEtC,IAAI,CAACH,UAAU,CAACE,QAAQ,CAACL,KAAK,EAAEM,QAAQ,CAAC;EAC3C;;AAnBWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT9BC,0BAAI;MAAAA,kFAAW;MAAAA,iBAAK;MAEpBA,6BAA8C;MAETA,qBAAK;MAAAA,iBAAQ;MAC9CA,2BAAoE;MACtEA,iBAAK;MACLA,6BAAkB;MACiBA,oDAAM;MAAAA,iBAAQ;MAC/CA,4BAA4C;MAC9CA,iBAAK","names":["FormControl","Validators","RegisterComponent","getErrorMessage","email","hasError","constructor","authSevice","required","register","password","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  \n  email = new FormControl('',[Validators.required, Validators.email]);\n  password = new FormControl('',[Validators.required]);\n  hide = true;\n  \n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Заполните поле';\n    }\n\n    return this.email.hasError('email') ? \"Не верный формат\" : '';\n  }\n\n  constructor(private authSevice: AuthService) {}\n\n  register(email: string, password: string)\n  {\n    this.authSevice.register(email, password);\n  }\n}\n","<h1>Регистрация</h1>\n\n<ul class=\"col-4 mt-5 justify-content-center\">\n  <li class=\"row-2\">\n    <label for=\"\" class=\"form-label\">Email</label>\n    <input type=\"email\" class=\"form-control\" placeholder=\"abc@mail.com\">\n  </li>\n  <li class=\"row-2\">\n    <label for=\"\" class=\"form-label\">Пароль</label>\n    <input type=\"password\" class=\"form-control\">\n  </li> \n</ul>\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}