{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operators/concatMap';\nimport { tap } from 'rxjs/operators/tap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"disabled\": a0,\n    \"btn-outline-primary\": a1,\n    \"btn-primary\": a2\n  };\n};\nconst _c1 = [\"*\"];\nexport class FavoriteButtonComponent {\n  constructor(articlesService, router, userService) {\n    this.articlesService = articlesService;\n    this.router = router;\n    this.userService = userService;\n    this.toggle = new EventEmitter();\n    this.isSubmitting = false;\n  }\n  toggleFavorite() {\n    this.isSubmitting = true;\n    this.userService.isAuthenticated.pipe(concatMap(authenticated => {\n      // Not authenticated? Push to login screen\n      if (!authenticated) {\n        this.router.navigateByUrl('/login');\n        return of(null);\n      }\n      // Favorite the article if it isn't favorited yet\n      if (!this.article.favorited) {\n        return this.articlesService.favorite(this.article.slug).pipe(tap(data => {\n          this.isSubmitting = false;\n          this.toggle.emit(true);\n        }, err => this.isSubmitting = false));\n        // Otherwise, unfavorite the article\n      } else {\n        return this.articlesService.unfavorite(this.article.slug).pipe(tap(data => {\n          this.isSubmitting = false;\n          this.toggle.emit(false);\n        }, err => this.isSubmitting = false));\n      }\n    })).subscribe();\n  }\n}\nFavoriteButtonComponent.ɵfac = function FavoriteButtonComponent_Factory(t) {\n  return new (t || FavoriteButtonComponent)(i0.ɵɵdirectiveInject(i1.ArticlesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.UserService));\n};\nFavoriteButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FavoriteButtonComponent,\n  selectors: [[\"app-favorite-button\"]],\n  inputs: {\n    article: \"article\"\n  },\n  outputs: {\n    toggle: \"toggle\"\n  },\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"btn\", \"btn-sm\", 3, \"ngClass\", \"click\"], [1, \"ion-heart\"]],\n  template: function FavoriteButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function FavoriteButtonComponent_Template_button_click_0_listener() {\n        return ctx.toggleFavorite();\n      });\n      i0.ɵɵelement(1, \"i\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(1, _c0, ctx.isSubmitting, !ctx.article.favorited, ctx.article.favorited));\n    }\n  },\n  dependencies: [i3.NgClass],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AAKtE,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,GAAG,QAAQ,oBAAoB;;;;;;;;;;;;;AAMxC,OAAM,MAAOC,uBAAuB;EAClCC,YACUC,eAAgC,EAChCC,MAAc,EACdC,WAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAIX,WAAM,GAAG,IAAIR,YAAY,EAAW;IAC9C,iBAAY,GAAG,KAAK;EAJjB;EAMHS,cAAc;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACF,WAAW,CAACG,eAAe,CAACC,IAAI,CAACV,SAAS,CAC5CW,aAAa,IAAI;MAChB;MACA,IAAI,CAACA,aAAa,EAAE;QAClB,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,QAAQ,CAAC;QACnC,OAAOb,EAAE,CAAC,IAAI,CAAC;;MAGjB;MACA,IAAI,CAAC,IAAI,CAACc,OAAO,CAACC,SAAS,EAAE;QAC3B,OAAO,IAAI,CAACV,eAAe,CAACW,QAAQ,CAAC,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,CACtDN,IAAI,CAACT,GAAG,CACPgB,IAAI,IAAG;UACL,IAAI,CAACT,YAAY,GAAG,KAAK;UACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,EACDC,GAAG,IAAI,IAAI,CAACZ,YAAY,GAAG,KAAK,CACjC,CAAC;QAEJ;OACC,MAAM;QACL,OAAO,IAAI,CAACJ,eAAe,CAACiB,UAAU,CAAC,IAAI,CAACR,OAAO,CAACG,IAAI,CAAC,CACxDN,IAAI,CAACT,GAAG,CACPgB,IAAI,IAAG;UACL,IAAI,CAACT,YAAY,GAAG,KAAK;UACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,KAAK,CAAC;QACzB,CAAC,EACDC,GAAG,IAAI,IAAI,CAACZ,YAAY,GAAG,KAAK,CACjC,CAAC;;IAGN,CAAC,CACF,CAAC,CAACc,SAAS,EAAE;EAChB;;AA/CWpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAqB;EAAAC;IAAAX;EAAA;EAAAY;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCbpCC,iCAI4B;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MACzBD,uBAAyB;MAACA,kBAAyB;MACrDA,iBAAS;;;MALRA,qHAEgD","names":["EventEmitter","of","concatMap","tap","FavoriteButtonComponent","constructor","articlesService","router","userService","toggleFavorite","isSubmitting","isAuthenticated","pipe","authenticated","navigateByUrl","article","favorited","favorite","slug","data","toggle","emit","err","unfavorite","subscribe","selectors","inputs","outputs","ngContentSelectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\buttons\\favorite-button.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\shared\\buttons\\favorite-button.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Article } from '../models';\nimport { ArticlesService, UserService } from '../services';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operators/concatMap';\nimport { tap } from 'rxjs/operators/tap';\n\n@Component({\n  selector: 'app-favorite-button',\n  templateUrl: './favorite-button.component.html'\n})\nexport class FavoriteButtonComponent {\n  constructor(\n    private articlesService: ArticlesService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  @Input() article: Article;\n  @Output() toggle = new EventEmitter<boolean>();\n  isSubmitting = false;\n\n  toggleFavorite() {\n    this.isSubmitting = true;\n\n    this.userService.isAuthenticated.pipe(concatMap(\n      (authenticated) => {\n        // Not authenticated? Push to login screen\n        if (!authenticated) {\n          this.router.navigateByUrl('/login');\n          return of(null);\n        }\n\n        // Favorite the article if it isn't favorited yet\n        if (!this.article.favorited) {\n          return this.articlesService.favorite(this.article.slug)\n          .pipe(tap(\n            data => {\n              this.isSubmitting = false;\n              this.toggle.emit(true);\n            },\n            err => this.isSubmitting = false\n          ));\n\n        // Otherwise, unfavorite the article\n        } else {\n          return this.articlesService.unfavorite(this.article.slug)\n          .pipe(tap(\n            data => {\n              this.isSubmitting = false;\n              this.toggle.emit(false);\n            },\n            err => this.isSubmitting = false\n          ));\n        }\n\n      }\n    )).subscribe();\n  }\n}\n","<button class=\"btn btn-sm\"\n [ngClass]=\"{ 'disabled' : isSubmitting,\n              'btn-outline-primary': !article.favorited,\n              'btn-primary': article.favorited }\"\n (click)=\"toggleFavorite()\">\n  <i class=\"ion-heart\"></i> <ng-content></ng-content>\n</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}