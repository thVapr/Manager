{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_form_3_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_3_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Signup failed!\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.errorMessage, \" \");\n  }\n}\nfunction RegisterComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5, 6);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r2.form.valid && ctx_r7.register());\n    });\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"label\", 8);\n    i0.ɵɵtext(4, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 9, 10);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.form.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"label\", 11);\n    i0.ɵɵtext(9, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_3_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.form.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, RegisterComponent_form_3_div_12_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 15);\n    i0.ɵɵtext(15, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, RegisterComponent_form_3_div_16_Template, 4, 1, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(1);\n    const _r4 = i0.ɵɵreference(11);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.email);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors && _r2.submitted);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", _r2.submitted && ctx_r0.isSignUpFailed);\n  }\n}\nfunction RegisterComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Your registration is successful! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.form = {\n      username: null,\n      email: null,\n      password: null\n    };\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n  }\n  register() {\n    const {\n      email,\n      password\n    } = this.form;\n    this.authService.register(email, password).subscribe(data => {\n      console.log(data);\n      this.isSuccessful = true;\n      this.isSignUpFailed = false;\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isSignUpFailed = true;\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"class\", \"alert-danger\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"alert-danger\"], [1, \"alert\", \"alert-warning\"], [1, \"alert\", \"alert-success\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵtemplate(3, RegisterComponent_form_3_Template, 17, 4, \"form\", 3);\n      i0.ɵɵtemplate(4, RegisterComponent_div_4_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSuccessful);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSuccessful);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAyFQA,+BAAiE;IAE7DA,wDACF;IAAAA,iBAAM;;;;;IAOVA,+BAAuE;IACrEA,+BAAc;IAAAA,qBAAM;IAAAA,YACtB;IAAAA,iBAAM;;;;IADgBA,eACtB;IADsBA,mDACtB;;;;;;IA3CFA,kCAMC;IAHCA;MAAAA;MAAA;MAAA;MAAA,OAAYA,iCAAgBC,iBAAU;IAAA,EAAC;IAKvCD,8BAAwB;IACHA,qBAAK;IAAAA,iBAAQ;IAChCA,oCAQE;IAJAA;MAAAA;MAAA;MAAA,OAAaA,0CACjB;IAAA,EAD4B;IAJ1BA,iBAQE;IAEJA,8BAAwB;IACAA,wBAAQ;IAAAA,iBAAQ;IACtCA,sCAQE;IAJAA;MAAAA;MAAA;MAAA,OAAaA,8CACjB;IAAA,EAD+B;IAJ7BA,iBAQE;IACFA,4EAGQ;IACRA,iBAAM;IAERA,+BAAwB;IACoBA,wBAAO;IAAAA,iBAAS;IAG5DA,4EAEM;IACRA,iBAAO;;;;;;IA9BDA,eAAwB;IAAxBA,2CAAwB;IAYxBA,eAA2B;IAA3BA,8CAA2B;IAKFA,eAAoC;IAApCA,kDAAoC;IAU/BA,eAAmC;IAAnCA,6DAAmC;;;;;IAKvEA,+BAAsD;IACpDA,kDACF;IAAAA,iBAAM;;;ACjGV,OAAM,MAAOE,iBAAiB;EAU5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAT/B,SAAI,GAAQ;MACVC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE;KACX;IACD,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,KAAK;IACtB,iBAAY,GAAG,EAAE;EAE+B;EAEhDC,QAAQ;IACN,MAAM;MAAEF,KAAK;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACE,IAAI;IAErC,IAAI,CAACL,WAAW,CAACI,QAAQ,CAAEF,KAAK,EAAEC,QAAQ,CAAC,CAACG,SAAS,CACnDC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,cAAc,GAAG,KAAK;IAC7B,CAAC,EACDC,GAAG,IAAG;MACJ,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAACC,OAAO;MACrC,IAAI,CAACJ,cAAc,GAAG,IAAI;IAC5B,CAAC,CACF;EACH;;AA1BWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MD0C9BxB,8BAAuB;MAEnBA,yBAIE;MACFA,qEA4CO;MAEPA,kEAEM;MACRA,iBAAM;;;MAhDDA,eAAmB;MAAnBA,wCAAmB;MA6CYA,eAAkB;MAAlBA,uCAAkB","names":["i0","ctx_r7","RegisterComponent","constructor","authService","username","email","password","register","form","subscribe","data","console","log","isSuccessful","isSignUpFailed","err","errorMessage","error","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.html","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\register\\register.component.ts"],"sourcesContent":["<!--<h1 class=\"text-center mt-5 mb-5\">Регистрация</h1>\n\n<section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-9 col-lg-6 col-xl-5 mb-5\">\n        <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\n          class=\"img-fluid\" alt=\"Sample image\">\n      </div>\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n        \n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"register\">\n\n          <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"form3Example3\">Email</label>\n            <input type=\"email\" id=\"form3Example3\" class=\"form-control form-control-lg\"\n              placeholder=\"example@example.com\" formControlName=\"email\"/>\n          </div>\n\n          <div class=\"form-outline mb-3\">\n            <label class=\"form-label\" for=\"form3Example4\">Пароль</label>\n            <input type=\"password\" id=\"form3Example4\" class=\"form-control form-control-lg\"\n              placeholder=\"\" formControlName=\"password\" />\n          </div>\n\n          <div class=\"d-flex justify-content-between align-items-center\">\n\n            <div class=\"form-check mb-0\">\n              <input class=\"form-check-input me-2\" type=\"checkbox\" id=\"form2Example3\" />\n              <label class=\"form-check-label\" for=\"form2Example3\">\n                Запомнить меня\n              </label>\n            </div>\n            <a href=\"#!\" class=\"text-body\">Забыли пароль?</a>\n          </div>\n\n          <div class=\"text-center text-lg-start mt-4 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style=\"padding-left: 2.5rem; padding-right: 2.5rem;\">Регистрация</button>\n            <p class=\"small fw-bold mt-2 pt-1 mb-0\">У вас уже есть аккаунт? <a href=\"#!\"\n                class=\"link-danger\">Войдите в него!</a></p>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</section>\n\n-->\n\n<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && register()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\n\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  register(): void {\n    const { email, password } = this.form;\n\n    this.authService.register( email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}