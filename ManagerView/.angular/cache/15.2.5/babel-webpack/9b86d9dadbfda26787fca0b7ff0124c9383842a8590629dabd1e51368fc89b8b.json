{"ast":null,"code":"import { User } from 'src/app/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RegistrationComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_6_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_6_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"email\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"email\"].errors.email);\n  }\n}\nfunction RegistrationComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_11_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_11_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"password\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"password\"].errors.minlength);\n  }\n}\nfunction RegistrationComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_16_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"confirmPassword\"].errors.required);\n  }\n}\nexport class RegistrationComponent {\n  constructor() {\n    this.user = new User();\n    this.registrationForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n    this.http.post('http://localhost:5106/api/authentication', data).subscribe(response => console.log(response), error => console.log(error));\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)();\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 19,\n  vars: 7,\n  consts: [[3, \"ngSubmit\"], [\"registrationForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, RegistrationComponent_div_6_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, RegistrationComponent_div_11_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 10);\n      i0.ɵɵtext(18, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"email\"].invalid && (_r0.controls[\"email\"].dirty || _r0.controls[\"email\"].touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"password\"].invalid && (_r0.controls[\"password\"].dirty || _r0.controls[\"password\"].touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"confirmPassword\"].invalid && (_r0.controls[\"confirmPassword\"].dirty || _r0.controls[\"confirmPassword\"].touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.EmailValidator],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,qBAAqB;;;;;;ICIlCC,2BAAgE;IAAAA,kCAAkB;IAAAA,iBAAM;;;;;IACxFA,2BAA6D;IAAAA,iCAAiB;IAAAA,iBAAM;;;;;IAFtFA,2BAAoJ;IAClJA,4EAAwF;IACxFA,4EAAoF;IACtFA,iBAAM;;;;;IAFEA,eAAwD;IAAxDA,4DAAwD;IACxDA,eAAqD;IAArDA,yDAAqD;;;;;IAO3DA,2BAAmE;IAAAA,qCAAqB;IAAAA,iBAAM;;;;;IAC9FA,2BAAoE;IAAAA,4DAA4C;IAAAA,iBAAM;;;;;IAFxHA,2BAA6J;IAC3JA,6EAA8F;IAC9FA,6EAAsH;IACxHA,iBAAM;;;;;IAFEA,eAA2D;IAA3DA,+DAA2D;IAC3DA,eAA4D;IAA5DA,gEAA4D;;;;;IAOlEA,2BAA0E;IAAAA,6CAA6B;IAAAA,iBAAM;;;;;IAD/GA,2BAAkL;IAChLA,6EAA6G;IAC/GA,iBAAM;;;;;IADEA,eAAkE;IAAlEA,sEAAkE;;;ADZhF,OAAM,MAAOC,qBAAqB;EAKhCC;IAFA,SAAI,GAAS,IAAIH,IAAI,EAAE;IAGrB,IAAI,CAACI,gBAAgB,GAAG,IAAIC,SAAS,CAAC;MACpCC,KAAK,EAAE,IAAIC,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACF,KAAK,CAAC,CAAC;MACnEI,QAAQ,EAAE,IAAIH,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7EC,eAAe,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,CAAC;KAC3D,CAAC;IAEF,IAAI,CAACI,IAAI,CAACC,IAAI,CAAC,0CAA0C,EAAEC,IAAI,CAAC,CAACC,SAAS,CACxEC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,EACjCG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,CAC5B;EACH;;AAhBWlB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTlCxB,kCAAyD;MAAxBA;QAAA,OAAYyB,cAAU;MAAA,EAAC;MACpDzB,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAAoG;MAAnCA;QAAA;MAAA,EAAmB;MAApFA,iBAAoG;MACpGA,sEAGM;MACRA,iBAAM;MACNA,8BAAwB;MACAA,yBAAS;MAAAA,iBAAQ;MACvCA,iCAAwH;MAA9CA;QAAA;MAAA,EAAsB;MAAhGA,iBAAwH;MACxHA,wEAGM;MACRA,iBAAM;MACNA,+BAAwB;MACOA,kCAAiB;MAAAA,iBAAQ;MACtDA,iCAA+H;MAAvCA;QAAA;MAAA,EAA6B;MAArHA,iBAA+H;MAC/HA,wEAEM;MACRA,iBAAM;MACNA,mCAAmF;MAAAA,yBAAQ;MAAAA,iBAAS;;;;MArBjCA,eAAmB;MAAnBA,mCAAmB;MAC9EA,eAA4I;MAA5IA,sHAA4I;MAOxEA,eAAsB;MAAtBA,sCAAsB;MAC1FA,eAAqJ;MAArJA,+HAAqJ;MAOnEA,eAA6B;MAA7BA,6CAA6B;MAC/GA,eAA0K;MAA1KA,oJAA0K;MAIpIA,eAAoC;MAApCA,qCAAoC","names":["User","i0","RegistrationComponent","constructor","registrationForm","FormGroup","email","FormControl","Validators","required","password","minLength","confirmPassword","http","post","data","subscribe","response","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\registration\\registration\\registration.component.ts","C:\\Users\\vaprm\\Projects\\Manager\\ManagerView\\src\\app\\registration\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { HttpClient } from '@angular/common/http' \n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent {\n  \n  registrationForm: FormGroup;\n  user: User = new User();\n\n  constructor() {\n    this.registrationForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n\n    this.http.post('http://localhost:5106/api/authentication', data).subscribe(\n      response => console.log(response),\n      error => console.log(error)\n    );\n  }\n}\n","<form #registrationForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required email>\n      <div *ngIf=\"registrationForm.controls['email'].invalid && (registrationForm.controls['email'].dirty || registrationForm.controls['email'].touched)\">\n        <div *ngIf=\"registrationForm.controls['email'].errors.required\">Email is required.</div>\n        <div *ngIf=\"registrationForm.controls['email'].errors.email\">Email is invalid.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required minlength=\"6\">\n      <div *ngIf=\"registrationForm.controls['password'].invalid && (registrationForm.controls['password'].dirty || registrationForm.controls['password'].touched)\">\n        <div *ngIf=\"registrationForm.controls['password'].errors.required\">Password is required.</div>\n        <div *ngIf=\"registrationForm.controls['password'].errors.minlength\">Password must be at least 6 characters long.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Confirm Password:</label>\n      <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" required>\n      <div *ngIf=\"registrationForm.controls['confirmPassword'].invalid && (registrationForm.controls['confirmPassword'].dirty || registrationForm.controls['confirmPassword'].touched)\">\n        <div *ngIf=\"registrationForm.controls['confirmPassword'].errors.required\">Confirm password is required.</div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registrationForm.valid\">Register</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}